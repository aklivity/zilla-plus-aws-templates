{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "IotIngestAndControlStack": {
        "id": "IotIngestAndControlStack",
        "path": "IotIngestAndControlStack",
        "children": {
          "Vpc": {
            "id": "Vpc",
            "path": "IotIngestAndControlStack/Vpc",
            "children": {
              "IsolatedSubnet1": {
                "id": "IsolatedSubnet1",
                "path": "IotIngestAndControlStack/Vpc/IsolatedSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.173.2"
                }
              },
              "IsolatedSubnet2": {
                "id": "IsolatedSubnet2",
                "path": "IotIngestAndControlStack/Vpc/IsolatedSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.173.2"
            }
          },
          "InternetGateway-IotIngestAndControlStack": {
            "id": "InternetGateway-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/InternetGateway-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
              "aws:cdk:cloudformation:props": {
                "tags": [
                  {
                    "key": "Name",
                    "value": "my-igw"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
              "version": "2.173.2"
            }
          },
          "VpcGatewayAttachment-IotIngestAndControlStack": {
            "id": "VpcGatewayAttachment-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/VpcGatewayAttachment-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
              "aws:cdk:cloudformation:props": {
                "internetGatewayId": {
                  "Ref": "InternetGatewayIotIngestAndControlStack"
                },
                "vpcId": "vpc-0ef060025d212cac7"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
              "version": "2.173.2"
            }
          },
          "PublicRouteTable-IotIngestAndControlStack": {
            "id": "PublicRouteTable-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/PublicRouteTable-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
              "aws:cdk:cloudformation:props": {
                "tags": [
                  {
                    "key": "Name",
                    "value": "public-route-table"
                  }
                ],
                "vpcId": "vpc-0ef060025d212cac7"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
              "version": "2.173.2"
            }
          },
          "PublicRoute-IotIngestAndControlStack": {
            "id": "PublicRoute-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/PublicRoute-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
              "aws:cdk:cloudformation:props": {
                "destinationCidrBlock": "0.0.0.0/0",
                "gatewayId": {
                  "Ref": "InternetGatewayIotIngestAndControlStack"
                },
                "routeTableId": {
                  "Ref": "PublicRouteTableIotIngestAndControlStack"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
              "version": "2.173.2"
            }
          },
          "Subnet1": {
            "id": "Subnet1",
            "path": "IotIngestAndControlStack/Subnet1",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
              "aws:cdk:cloudformation:props": {
                "availabilityZone": {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::GetAZs": ""
                    }
                  ]
                },
                "cidrBlock": "10.0.0.0/20",
                "mapPublicIpOnLaunch": true,
                "tags": [
                  {
                    "key": "Name",
                    "value": "public-subnet-1-IotIngestAndControlStack"
                  }
                ],
                "vpcId": "vpc-0ef060025d212cac7"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
              "version": "2.173.2"
            }
          },
          "Subnet1RouteTableAssociation": {
            "id": "Subnet1RouteTableAssociation",
            "path": "IotIngestAndControlStack/Subnet1RouteTableAssociation",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
              "aws:cdk:cloudformation:props": {
                "routeTableId": {
                  "Ref": "PublicRouteTableIotIngestAndControlStack"
                },
                "subnetId": {
                  "Ref": "Subnet1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
              "version": "2.173.2"
            }
          },
          "Subnet2": {
            "id": "Subnet2",
            "path": "IotIngestAndControlStack/Subnet2",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
              "aws:cdk:cloudformation:props": {
                "availabilityZone": {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::GetAZs": ""
                    }
                  ]
                },
                "cidrBlock": "10.0.16.0/20",
                "mapPublicIpOnLaunch": true,
                "tags": [
                  {
                    "key": "Name",
                    "value": "public-subnet-2-IotIngestAndControlStack"
                  }
                ],
                "vpcId": "vpc-0ef060025d212cac7"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
              "version": "2.173.2"
            }
          },
          "Subnet2RouteTableAssociation": {
            "id": "Subnet2RouteTableAssociation",
            "path": "IotIngestAndControlStack/Subnet2RouteTableAssociation",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
              "aws:cdk:cloudformation:props": {
                "routeTableId": {
                  "Ref": "PublicRouteTableIotIngestAndControlStack"
                },
                "subnetId": {
                  "Ref": "Subnet2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
              "version": "2.173.2"
            }
          },
          "ZillaPlusRole-IotIngestAndControlStack": {
            "id": "ZillaPlusRole-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusRole-IotIngestAndControlStack",
            "children": {
              "ImportZillaPlusRole-IotIngestAndControlStack": {
                "id": "ImportZillaPlusRole-IotIngestAndControlStack",
                "path": "IotIngestAndControlStack/ZillaPlusRole-IotIngestAndControlStack/ImportZillaPlusRole-IotIngestAndControlStack",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.173.2"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "IotIngestAndControlStack/ZillaPlusRole-IotIngestAndControlStack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": [
                              "cloudformation.amazonaws.com",
                              "ec2.amazonaws.com"
                            ]
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSCertificateManagerReadOnly"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSGlueSchemaRegistryReadonlyAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/CloudWatchLogsFullAccess"
                          ]
                        ]
                      }
                    ],
                    "policies": [
                      {
                        "policyName": "CCProxySecretsManagerRead",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "acm-pca:DescribeCertificateAuthority",
                                "acm-pca:GetCertificate",
                                "acm-pca:GetCertificateAuthorityCertificate",
                                "secretsmanager:DescribeSecret",
                                "secretsmanager:GetSecretValue",
                                "tag:GetResources"
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                              "Sid": "VisualEditor0"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "roleName": "zilla_plus_role-IotIngestAndControlStack"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.173.2"
            }
          },
          "ZillaPlusInstanceProfile-IotIngestAndControlStack": {
            "id": "ZillaPlusInstanceProfile-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusInstanceProfile-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
              "aws:cdk:cloudformation:props": {
                "instanceProfileName": "zilla_plus_role-IotIngestAndControlStack",
                "roles": [
                  {
                    "Ref": "ZillaPlusRoleIotIngestAndControlStackD156E33C"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
              "version": "2.173.2"
            }
          },
          "ZillaPlusRolePolicy-IotIngestAndControlStack": {
            "id": "ZillaPlusRolePolicy-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusRolePolicy-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
              "aws:cdk:cloudformation:props": {
                "policyDocument": {
                  "Statement": [
                    {
                      "Action": [
                        "secretsmanager:GetSecretValue",
                        "secretsmanager:DescribeSecret"
                      ],
                      "Effect": "Allow",
                      "Resource": "arn:aws:secretsmanager:*:*:secret:*",
                      "Sid": "secretStatement"
                    },
                    {
                      "Action": [
                        "logs:*",
                        "cloudwatch:GenerateQuery",
                        "cloudwatch:PutMetricData"
                      ],
                      "Effect": "Allow",
                      "Resource": "*",
                      "Sid": "cloudwatchStatement"
                    }
                  ],
                  "Version": "2012-10-17"
                },
                "policyName": "ZillaPlusRolePolicy-IotIngestAndControlStack",
                "roles": [
                  {
                    "Ref": "ZillaPlusRoleIotIngestAndControlStackD156E33C"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
              "version": "2.173.2"
            }
          },
          "ZillaPlusSecurityGroup-IotIngestAndControlStack": {
            "id": "ZillaPlusSecurityGroup-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusSecurityGroup-IotIngestAndControlStack",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "IotIngestAndControlStack/ZillaPlusSecurityGroup-IotIngestAndControlStack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Zilla Plus",
                    "groupName": "zilla-plus-security-group-IotIngestAndControlStack",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 8883,
                        "toPort": 8883,
                        "description": "from 0.0.0.0/0:8883"
                      }
                    ],
                    "vpcId": "vpc-0ef060025d212cac7"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.173.2"
            }
          },
          "LogGroup-IotIngestAndControlStack": {
            "id": "LogGroup-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/LogGroup-IotIngestAndControlStack",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "IotIngestAndControlStack/LogGroup-IotIngestAndControlStack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "logGroupName": "IotIngestAndControlStack-group",
                    "retentionInDays": 30
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogGroup",
              "version": "2.173.2"
            }
          },
          "LogStream-IotIngestAndControlStack": {
            "id": "LogStream-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/LogStream-IotIngestAndControlStack",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "IotIngestAndControlStack/LogStream-IotIngestAndControlStack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogStream",
                  "aws:cdk:cloudformation:props": {
                    "logGroupName": {
                      "Ref": "LogGroupIotIngestAndControlStack70C325AF"
                    },
                    "logStreamName": "events"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogStream",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogStream",
              "version": "2.173.2"
            }
          },
          "NetworkLoadBalancer-IotIngestAndControlStack": {
            "id": "NetworkLoadBalancer-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/NetworkLoadBalancer-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
              "aws:cdk:cloudformation:props": {
                "ipAddressType": "ipv4",
                "name": "nlb-IotIngestAndControlStack",
                "scheme": "internet-facing",
                "subnets": [
                  {
                    "Ref": "Subnet1"
                  },
                  {
                    "Ref": "Subnet2"
                  }
                ],
                "type": "network"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer",
              "version": "2.173.2"
            }
          },
          "NLBTargetGroup-IotIngestAndControlStack": {
            "id": "NLBTargetGroup-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/NLBTargetGroup-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
              "aws:cdk:cloudformation:props": {
                "name": "nlb-tg-IotIngestAndControlStack",
                "port": 8883,
                "protocol": "TCP",
                "vpcId": "vpc-0ef060025d212cac7"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup",
              "version": "2.173.2"
            }
          },
          "NLBListener-IotIngestAndControlStack": {
            "id": "NLBListener-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/NLBListener-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
              "aws:cdk:cloudformation:props": {
                "defaultActions": [
                  {
                    "type": "forward",
                    "targetGroupArn": {
                      "Ref": "NLBTargetGroupIotIngestAndControlStack"
                    }
                  }
                ],
                "loadBalancerArn": {
                  "Ref": "NetworkLoadBalancerIotIngestAndControlStack"
                },
                "port": 8883,
                "protocol": "TCP"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
              "version": "2.173.2"
            }
          },
          "ZillaPlusLaunchTemplate-IotIngestAndControlStack": {
            "id": "ZillaPlusLaunchTemplate-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusLaunchTemplate-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::LaunchTemplate",
              "aws:cdk:cloudformation:props": {
                "launchTemplateData": {
                  "imageId": "ami-01af6cc324a63e800",
                  "instanceType": "t3.small",
                  "networkInterfaces": [
                    {
                      "associatePublicIpAddress": true,
                      "deviceIndex": 0,
                      "groups": [
                        {
                          "Fn::GetAtt": [
                            "ZillaPlusSecurityGroupIotIngestAndControlStackDB9C7E64",
                            "GroupId"
                          ]
                        }
                      ]
                    }
                  ],
                  "iamInstanceProfile": {
                    "name": {
                      "Ref": "ZillaPlusInstanceProfileIotIngestAndControlStack"
                    }
                  },
                  "userData": {
                    "Fn::Base64": {
                      "Fn::Join": [
                        "",
                        [
                          "#!/bin/bash -xe\nyum update -y aws-cfn-bootstrap\ncat <<'END_HELP' > /etc/zilla/zilla.yaml\nname: iot\nvaults:\n  secure:\n    type: aws-secrets\ntelemetry:\n  metrics:\n    - stream.active.received\n    - stream.active.sent\n    - stream.opens.received\n    - stream.opens.sent\n    - stream.data.received\n    - stream.data.sent\n    - stream.errors.received\n    - stream.errors.sent\n    - stream.closes.received\n    - stream.closes.sent\n  exporters:\n    stdout_logs_exporter:\n      type: stdout\n    aws0:\n      type: aws-cloudwatch\n      options:\n        logs:\n          group: ",
                          {
                            "Ref": "LogGroupIotIngestAndControlStack70C325AF"
                          },
                          "\n          stream: events\n        metrics:\n          namespace: IotIngestAndControlStack-namespace\nbindings:\n  tcp_server:\n    type: tcp\n    kind: server\n    options:\n      host: 0.0.0.0\n      port: 8883\n    telemetry:\n      metrics:\n        - stream.*\n    exit: tls_server\n  tls_server:\n    type: tls\n    kind: server\n    vault: secure\n    options:\n      keys:\n        - arn:aws:secretsmanager:us-east-1:445711703002:secret:wildcard.example.aklivity.io-9-u4J0YL\n    telemetry:\n      metrics:\n        - stream.*\n    exit: mqtt_server\n  mqtt_server:\n    type: mqtt\n    kind: server\n    telemetry:\n      metrics:\n        - stream.*\n    exit: mqtt_kafka_mapping\n  mqtt_kafka_mapping:\n    type: mqtt-kafka\n    kind: proxy\n    options:\n      topics:\n        sessions: mqtt-sessions\n        messages: mqtt-messages\n        retained: mqtt-retained\n    telemetry:\n      metrics:\n        - stream.*\n    exit: kafka_cache_client\n  kafka_cache_client:\n    type: kafka\n    kind: cache_client\n    telemetry:\n      metrics:\n        - stream.*\n    exit: kafka_cache_server\n  kafka_cache_server:\n    type: kafka\n    kind: cache_server\n    options:\n      bootstrap:\n        - mqtt-messages\n        - mqtt-retained\n    telemetry:\n      metrics:\n        - stream.*\n    exit: kafka_client\n  kafka_client:\n    type: kafka\n    kind: client\n    options:\n      servers: ['b-1.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096','b-2.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096']\n      sasl:\n        mechanism: scram-sha-512\n        username: '${{aws.secrets.AmazonMSK_alice#username}}'\n        password: '${{aws.secrets.AmazonMSK_alice#password}}'\n    telemetry:\n      metrics:\n        - stream.*\n    exit: tls_client\n  tls_client:\n    type: tls\n    kind: client\n    vault: secure\n    telemetry:\n      metrics:\n        - stream.*\n    exit: tcp_client\n  tcp_client:\n    type: tcp\n    kind: client\n    telemetry:\n      metrics:\n        - stream.*\n\nEND_HELP\n\nchown ec2-user:ec2-user /etc/zilla/zilla.yaml\n\nmkdir /etc/cfn\ncat <<EOF > /etc/cfn/cfn-hup.conf\n\n[main]\nstack=IotIngestAndControlStack\nregion=us-east-1\n    \nEOF\n\nchown root:root /etc/cfn/cfn-hup.conf\nchmod 0400 /etc/cfn/cfn-hup.conf\n\nmkdir /etc/cfn/hooks.d\ncat <<EOF > /etc/cfn/hooks.d/cfn-auto-reloader.conf\n\n[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.ZillaPlusLaunchTemplate.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --stack IotIngestAndControlStack --resource ZillaPlusLaunchTemplate --region us-east-1\nrunas=root\n    \nEOF\n\nchown root:root /etc/cfn/hooks.d/cfn-auto-reloader.conf\nchmod 0400 /etc/cfn/hooks.d/cfn-auto-reloader.conf\n\nsystemctl enable cfn-hup\nsystemctl start cfn-hup\nsystemctl enable amazon-ssm-agent\nsystemctl start amazon-ssm-agent\nsystemctl enable zilla-plus\nsystemctl start zilla-plus\n\n\nwget https://archive.apache.org/dist/kafka/3.5.1/kafka_2.13-3.5.1.tgz\ntar -xzf kafka_2.13-3.5.1.tgz\ncd kafka_2.13-3.5.1/libs\nwget https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk-iam-auth-1.1.1-all.jar\ncd ../bin\nSECRET_STRING=$(aws secretsmanager get-secret-value --secret-id AmazonMSK_alice --query SecretString --output text)\nUSERNAME=$(echo $SECRET_STRING | jq -r '.username')\nPASSWORD=$(echo $SECRET_STRING | jq -r '.password')\n\ncat <<'END_HELP'> client.properties\nsasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=$USERNAME password=$PASSWORD;\nsecurity.protocol=SASL_SSL\nsasl.mechanism=SCRAM-SHA-512\nEND_HELP\n./kafka-topics.sh --create --bootstrap-server b-1.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096,b-2.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096 --command-config client.properties --replication-factor 2 --partitions 3 --topic mqtt-sessions --config 'cleanup.policy=compact'\n./kafka-topics.sh --create --bootstrap-server b-1.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096,b-2.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096 --command-config client.properties --replication-factor 2 --partitions 3 --topic mqtt-retained --config 'cleanup.policy=compact'\n./kafka-topics.sh --create --bootstrap-server b-1.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096,b-2.mymskcluster.ba9c2m.c14.kafka.us-east-1.amazonaws.com:9096 --command-config client.properties --replication-factor 2 --partitions 3 --topic mqtt-messages\n      \n\n    "
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnLaunchTemplate",
              "version": "2.173.2"
            }
          },
          "ZillaPlusGroup-IotIngestAndControlStack": {
            "id": "ZillaPlusGroup-IotIngestAndControlStack",
            "path": "IotIngestAndControlStack/ZillaPlusGroup-IotIngestAndControlStack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
              "aws:cdk:cloudformation:props": {
                "desiredCapacity": "2",
                "launchTemplate": {
                  "launchTemplateId": {
                    "Ref": "ZillaPlusLaunchTemplateIotIngestAndControlStack"
                  },
                  "version": "1"
                },
                "maxSize": "5",
                "minSize": "1",
                "targetGroupArns": [
                  {
                    "Ref": "NLBTargetGroupIotIngestAndControlStack"
                  }
                ],
                "vpcZoneIdentifier": [
                  {
                    "Ref": "Subnet1"
                  },
                  {
                    "Ref": "Subnet2"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_autoscaling.CfnAutoScalingGroup",
              "version": "2.173.2"
            }
          },
          "NetworkLoadBalancerOutput": {
            "id": "NetworkLoadBalancerOutput",
            "path": "IotIngestAndControlStack/NetworkLoadBalancerOutput",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.173.2"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "IotIngestAndControlStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "IotIngestAndControlStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.173.2"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "IotIngestAndControlStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.173.2"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "IotIngestAndControlStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.173.2"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.173.2"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.173.2"
    }
  }
}